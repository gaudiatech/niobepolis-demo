# ------------------------
# *UNSTABLE* ver. of niobe polis. May 21th
# ------------------------
# Coords used in this game:
# floorgrid -> 64x32 2D grid
# chargrid  -> 32x16 2D grid
# mapcoords -> isometric large tiles(size of a floor element)
# gamecoords-> isometric small tiles(size of the avatar)


import json
import re
import time

#import katagames_sdk as katasdk
#katasdk.bootstrap()
import katagames_engine as kengi
kengi.bootstrap_e()

# CONSTANTS
MAXFPS = 45
PALIAS = {
    'greetings': 'niobepolis/myassets/greetings.png',
    'tilefloor': 'niobepolis/myassets/floor-tile.png',
    'gridsystem': 'niobepolis/myassets/grid-system.png',
}

# VARIABLES
# kengi = katasdk.kengi
pygame = kengi.pygame
scr = None
browser_wait = False  # async operations (stellar-related stuff)
browser_res = ''

dx = dy = 0
cached_gamelist = []
binded_state = None
EngineEvTypes = kengi.event.EngineEvTypes

avatar_m = None
viewer = None
keep_going = True
CgmEvent = kengi.event.CgmEvent
mger = None
lu_event = paint_event = None
wctrl = None
tilemap = tilemap2 = None
clock = pygame.time.Clock()
interruption = None  # used to change game

# extra parsing func (for the ig console), lets you call func like: name(arg1,...,argn)
re_function = re.compile(r'(?P<name>\S+)(?P<params>[\(].*[\)])')


# ---- start hack: this is for not using the .json file from disk ------
def _decode_hxd(x):
    return bytes.decode(bytes.fromhex(x))


# this str contains the whole map for niobepolis...
def get_frozen_json_txt():
    hxd_json_snapshot = ''
    return _decode_hxd(hxd_json_snapshot)
# ---- end hack


# --------- ignore this code, its just to un-break things
# after removing the dependency to KataSDK
class vStateMockup:  # temporary add-on to the may demo version
    def __init__(self):
        self.gamelist = ['nothing', ]

    def gamelist_func(self):
        return []


def console_func(console, match):
    funcname = match.group("name")
    if funcname in console.func_calls:
        func = console.func_calls[funcname]
    else:
        console.output('unknown function ' + funcname)
        return
    params = console.convert_token(match.group("params"))
    print(funcname, params)
    if not isinstance(params, tuple):
        params = [params]
    try:
        out = func(*params)
    except Exception as strerror:
        console.output(strerror)
    else:
        console.output(out)


# --------------- implem of console functions, docstrings are used for help ------------------START
def _gencb(x):
    global browser_res, browser_wait, ingame_console
    browser_res = x
    browser_wait = False
    ingame_console.output(browser_res)


def gamelist():
    """
    List all games. Use: gamelist
    :return:
    """
    return "\n".join(cached_gamelist)


def stellar_console_func(subcmd):
    """
    Stellar bridge. Use: stellar test/network/pkey
    """
    global browser_wait
    sbridge = katasdk.stellar
    if 'test' == subcmd:
        return sbridge.test_connection()
    elif 'network' == subcmd:
        browser_wait = True
        sbridge.get_network(_gencb)
    elif 'pkey' == subcmd:
        browser_wait = True
        sbridge.get_pkey(_gencb)
    else:
        return 'invalid subcmd'


def tp(gametag):
    """
    Teleport to another world. Use: tp gametag
    :param gametag:
    :return:
    """
    global interruption
    interruption = [2, gametag]


def add(a, b):
    """
    Simple add Function! Use: add a b
    """
    return a + b


def mul(a, b):
    """
    Une bete multiplication, tapez: mul a b
    """
    return float(a) * float(b)


def size():
    """
    Provide screen dim info. Use: size
    """
    w, h, = kengi.get_surface().get_size()
    return str(w) + ' ' + str(h)


to_edit = None


def cedit(cname):  # -------------------- experimental ----------------
    """
    Edit cartridge. Use: edit cartname
    """
    global to_edit
    to_edit = cname
    return f'...requesting edition {cname}'


leaving_niobe = False

def dohalt():
    """
    Provide screen dim info. Use: halt
    """
    global leaving_niobe
    leaving_niobe = True
    return 'quit niobe requested.'


listing_all_console_func = {  # IMPORTANT REMINDER!!
    # All functions listed here need to RETURN smth and they
    # need to have 1 line of docstring, and include a
    # "Use: xxx aa bb"
    # part at the end, otherwise the cmd "help cmd_name" would crash the soft!
    "size": size,
    "add": add,
    "mul": mul,
    "edit": cedit,
    "tp": tp,
    "gamelist": gamelist
}

def runs_in_web():
    return False
    # return katasdk.runs_in_web()


if not runs_in_web():
    listing_all_console_func["halt"] = dohalt
else:
    listing_all_console_func["stellar"] = stellar_console_func


# --------------- implem of console functions, docstrings are used for help ------------------END

CON_FONT_COLOR = (13, 253, 8)
ingame_console = None
# ---------- managing the console --------------end


# - charge tuiles syndicate, exploite un mapping code <> surface contenant tile image -
# we need to do it in a stupid way,
# due to how the ROM pseudo-compil works (=>detects raw strings for filepaths, moves assets)
# code2filename = {
#     35: PALIAS['t035'],
#     92: PALIAS['t092'],
#     160: PALIAS['t160'],
#     182: PALIAS['t182'],
#     183: PALIAS['t183'],
#     198: PALIAS['t198'],
#     203: PALIAS['t203'],
# }
# code2tile_map = dict()
# def _loadstuff():
#     for code, fn in code2filename.items():
#         code2tile_map[code] = pygame.image.load(fn)
#
#     for obj in code2tile_map.values():
#         obj.set_colorkey('#ff00ff')


CODE_GRASS = 203
BG_COLOR = (40, 40, 68)
my_x, my_y = 0, 0  # comme un offset purement 2d -> utile pr camera

posdecor = list()


def gridbased_2d_disp(grid_spec, coords, ref_img):
    local_i, local_j = coords
    scr.blit(ref_img, (my_x + local_i * grid_spec[0], my_y + local_j * grid_spec[1]))


def realise_pavage(gfx_elt, offsets=(0, 0)):
    vscr_size = kengi.get_surface().get_size()
    incx, incy = gfx_elt.get_size()  # 64*32 pour floortile
    for y in range(0, vscr_size[1], incy):
        for x in range(0, vscr_size[0], incx):
            scr.blit(gfx_elt, (offsets[0] + x, offsets[1] + y))


def conv_map_coords_floorgrid(u, v, z):
    base_res = [4, 0]  # mapcoords 0,0
    while u > 0:
        u -= 1
        base_res[0] += 1
        base_res[1] += 1
    while v > 0:
        v -= 1
        base_res[0] -= 1
        base_res[1] += 1
    while z > 0:
        z -= 1
        base_res[1] -= 1
    return base_res


class ExtraLayerView(kengi.event.EventReceiver):
    def __init__(self):
        super().__init__()

    def proc_event(self, ev, source=None):
        if ev.type == EngineEvTypes.PAINT:
            ingame_console.draw()  # console draw


class DebugV(kengi.event.EventReceiver):
    """
    on se sert de ca pour debug le submodule .isometric en web ctx...
    """
    def __init__(self):
        super().__init__()
        self.pbase = [44, 44]
        self.show_grid = False
        self.showin_tileset = False

        self.chartile = pygame.image.load(PALIAS['gridsystem'])
        self.chartile.set_colorkey('#ff00ff')

        self.floortile = pygame.image.load(PALIAS['tilefloor'])
        self.floortile.set_colorkey('#ff00ff')

    def proc_event(self, ev, source=None):
        global ingame_console

        if ev.type == EngineEvTypes.PAINT:
            # only here so the user can know that the DebugV component is active & rdy
            pygame.draw.circle(ev.screen, 'orange', self.pbase, 16)

            if self.show_grid:
                realise_pavage(self.chartile, offsets=(16 + my_x, 0 + my_y))
                realise_pavage(self.floortile, offsets=(0 + my_x, 0 + my_y))

            if self.showin_tileset:
                ev.screen.blit(viewer.isometric_map.tilesets[2].tile_surface, (self.pbase[0] + 32, self.pbase[1]))
                ev.screen.blit(viewer.isometric_map.tilesets[6].tile_surface, (self.pbase[0] + 122, self.pbase[1]))
                ev.screen.blit(viewer.isometric_map.tilesets[3].tile_surface, (self.pbase[0] + 212, self.pbase[1]))

                ev.screen.blit(viewer.isometric_map.tilesets[4].tile_surface, (self.pbase[0] + 32, self.pbase[1] + 60))
                ev.screen.blit(viewer.isometric_map.tilesets[5].tile_surface, (self.pbase[0] + 122, self.pbase[1] + 60))
                ev.screen.blit(viewer.isometric_map.tilesets[1].tile_surface, (self.pbase[0] + 212, self.pbase[1] + 60))

                ev.screen.blit(viewer.isometric_map.tilesets[7].tile_surface, (self.pbase[0] + 32, self.pbase[1] + 120))
                ev.screen.blit(viewer.isometric_map.tilesets[8].tile_surface, (self.pbase[0] + 122, self.pbase[1] + 120))
                ev.screen.blit(viewer.isometric_map.tilesets[9].tile_surface, (self.pbase[0] + 212, self.pbase[1] + 120))

        elif ev.type == pygame.KEYDOWN:
            if not ingame_console.active:
                if ev.key == pygame.K_BACKSPACE:
                    self.showin_tileset = not self.showin_tileset
                elif ev.key == pygame.K_SPACE:
                    self.show_grid = not self.show_grid


def load_isometric_map(csv=False):
    # no compression used
    kengi.isometric.IsometricLayer.flag_csv = csv  # notice the iso engine that our .json stores uncompressed data

    if not runs_in_web():
        # classic way to load map --
        print('load isometric map from regular .JSON')
        with open('niobepolis/myassets/test_map.json', 'r') as ff:
            jdict = json.load(ff)
    else:
        # alternative way: from frozen json
        jdict = json.loads(get_frozen_json_txt())

    return kengi.isometric.IsometricMap.from_json_dict(['niobepolis', 'myassets', ], jdict)


def _init_tilemap_etc():
    global scr, tilemap, avatar_m, viewer
    global mger, lu_event, paint_event, wctrl

    tilemap = load_isometric_map(csv=True)

    avatar_m = Character(10.5, 10.5)
    # better display, cosmetic change here
    avatar_m.ox = 0
    avatar_m.oy = -8

    # add the avatar to the map
    list(tilemap.objectgroups.values())[0].contents.append(avatar_m)

    viewer = kengi.isometric.IsometricMapViewer(
        tilemap, scr,
        up_scroll_key=pygame.K_UP,
        down_scroll_key=pygame.K_DOWN,
        left_scroll_key=pygame.K_LEFT,
        right_scroll_key=pygame.K_RIGHT
    )
    viewer.turn_on()
    #debugviewer = DebugV()
    #debugviewer.turn_on()

    # using a cursor -> YE
    # cursor_image = pygame.image.load("assets/(niobepolis)half-floor-tile.png").convert_alpha()
    # cursor_image.set_colorkey((255, 0, 255))
    # viewer.cursor = kengi.isometric.IsometricMapQuarterCursor(0, 0, cursor_image, tilemap.layers[1])

    # camera focus avatar
    viewer.set_focused_object(avatar_m)
    avatar_m.x += 1  # center the camera, now

    # chunk taken from PBGE, also it sets key repeat freq.
    # - disabled bc of web ctx BUGS! event manager cannot set repeating event, yet
    # pygame.time.set_timer(pygame.USEREVENT, int(1000 / FPS_PBGE))
    # pygame.key.set_repeat(200, 75)

    # TODO port Pbge to kengi CogObj+EventReceiver+event system,
    #  so we can avoid using pygame.USEREVENT and viewer() like here

    # - refactoring -> let's use the kengi event system
    lu_event = CgmEvent(EngineEvTypes.LOGICUPDATE, curr_t=None)
    paint_event = CgmEvent(EngineEvTypes.PAINT, screen=kengi.get_surface())

    wctrl = WorldCtrl()
    wctrl.turn_on()


class ExtraGuiLayerCtrl(kengi.event.EventReceiver):
    def __init__(self):
        super().__init__()

    def proc_event(self, ev, source=None):
        global t_map_changed, interruption, ingame_console

        ingame_console.process_input([ev, ])  # ne sais pas cmt gerer ca autrement

        if ev.type == pygame.KEYUP:
            pass
            # keys = pygame.key.get_pressed()
            # if (not keys[pygame.K_DOWN]) and (not keys[pygame.K_UP]):
            #     dy = 0
            # if (not keys[pygame.K_LEFT]) and (not keys[pygame.K_RIGHT]):
            #     dx = 0

        elif ev.type == pygame.KEYDOWN:
            if ev.key == pygame.K_F1:
                if not ingame_console.active:
                    ingame_console.activate()
                    viewer.pause_draw()
                else:
                    ingame_console.desactivate()
                    viewer.resume_draw()

            # TODO active console has to block key press, in the new system TOO!
            # example (old system):
            if not ingame_console.active:
                pass
            #     elif ev.key == pygame.K_RIGHT:
            #         dx = -1
            #     elif ev.key == pygame.K_LEFT:
            #         dx = +1
            #     elif ev.key == pygame.K_UP:
            #         dy = +1
            #     elif ev.key == pygame.K_DOWN:
            #         dy = -1

        elif ev.type == EngineEvTypes.LOGICUPDATE:

            if binded_state and (to_edit is not None):
                binded_state.cedit_arg = to_edit  # commit name of the file to be edited to VMstate
                interruption = [2, 'editor']

            if leaving_niobe:
                interruption = [1, None]

            # - old system for moving the camera
            # my_x += dx
            # my_y += dy

            # - mutating map periodically
            # tnow = ev.curr_t
            # if t_map_changed is None:
            #     t_map_changed = tnow
            #     dt = 0
            # else:
            #     dt = tnow - t_map_changed
            # if dt > 3.0:
            #    themap.shuffle()
            #    t_map_changed = tnow


class Character(kengi.isometric.IsometricMapObject):
    def __init__(self, x, y):
        super().__init__()
        self.x = x
        self.y = y

        self.surf = pygame.image.load("niobepolis/myassets/sys_icon.png").convert_alpha()
        self.ht = pygame.image.load("niobepolis/myassets/half-floor-tile.png").convert_alpha()
        self.ht.set_colorkey((255, 0, 255))
        # self.surf.set_colorkey((0,0,255))
        self.ox = self.oy = 0

    def __call__(self, dest_surface, sx, sy, mymap):
        mydest = self.ht.get_rect(midbottom=(sx, sy))
        dest_surface.blit(self.ht, mydest)
        mydest = self.surf.get_rect(midbottom=(sx + self.ox, sy + self.oy))
        dest_surface.blit(self.surf, mydest)


class WorldCtrl(kengi.event.EventReceiver):
    def __init__(self):
        super().__init__()

    def proc_event(self, ev, source=None):
        global keep_going, viewer

        if ev.type == EngineEvTypes.LOGICUPDATE:
            pass
            # [] temp disabled camera scrolling for speed matters
            # keys = pygame.key.get_pressed()
            # if keys[pygame.K_UP]:
            #     viewer.scroll_to(0)
            # elif keys[pygame.K_DOWN]:
            #     viewer.scroll_to(2)
            # if keys[pygame.K_RIGHT]:
            #     viewer.scroll_to(1)
            # elif keys[pygame.K_LEFT]:
            #     viewer.scroll_to(3)

        elif ev.type == pygame.MOUSEBUTTONDOWN:
            pass
            # [] temp disabled av movement using the mouse, for demo simplicity
            # mouse_x, mouse_y = kengi.core.proj_to_vscreen(pygame.mouse.get_pos())
            # tx, ty =
            #   viewer.map_x(mouse_x, mouse_y, return_int=False), viewer.map_y(mouse_x, mouse_y, return_int=False)
            # print(tx, ty)
            # avatar_m.x, avatar_m.y = tx, ty

        elif ev.type == pygame.KEYDOWN:
            delta_pos_coord = 0.5
            # -- avatar movement via arrow keys
            if ev.key == pygame.K_RIGHT and avatar_m.x < tilemap.width - 2.2:
                avatar_m.x += delta_pos_coord
            elif ev.key == pygame.K_UP and avatar_m.y > -0.5:
                avatar_m.y -= delta_pos_coord
            elif ev.key == pygame.K_LEFT and avatar_m.x > -0.5:
                avatar_m.x -= delta_pos_coord
            elif ev.key == pygame.K_DOWN and avatar_m.y < tilemap.height - 2.2:
                avatar_m.y += delta_pos_coord


# -------------------------------
#  base functions for katasdk compatibility
# -------------------------------
def game_enter(vmstate):
    global mger, scr, ingame_console, cached_gamelist, binded_state

    kengi.init('super_retro', caption='niobepolis - unstable')
    mger = kengi.event.EventManager.instance()  # works only after a .init(...) operation
    scr = kengi.get_surface()
    vscr_size = scr.get_size()

    _init_tilemap_etc()

    extra_gui_v = ExtraLayerView()
    extra_gui_ctrl = ExtraGuiLayerCtrl()
    for elk in (extra_gui_v, extra_gui_ctrl):
        elk.turn_on()

    ingame_console = kengi.console.CustomConsole(
        scr,
        (0, 0, vscr_size[0], int(0.9 * vscr_size[1])),  # takes up 90% of the scr height
        functions=listing_all_console_func,
        key_calls={},
        vari={"A": 100, "B": 200, "C": 300},
        syntax={re_function: console_func},
        fontobj=kengi.gui.ImgBasedFont('niobepolis/myassets/gibson1_font.png', CON_FONT_COLOR)  # new ft system
    )
    cached_gamelist.extend(vmstate.gamelist_func())
    binded_state = vmstate


def game_update(infot=None):
    global lu_event, paint_event, keep_going, interruption, mger
    # use the kengi event system
    lu_event.curr_t = infot
    mger.post(lu_event)
    mger.post(paint_event)
    mger.update()

    if not keep_going:
        interruption = [1, None]

    if interruption:
        return interruption

    kengi.flip()
    if not runs_in_web():
        clock.tick(MAXFPS)


def game_exit(vmstate):
    print('niobepolis->EXIT. The vmstate is: ', vmstate)
    kengi.quit()


if __name__ == '__main__':
    _dummy_vmstate = vStateMockup()
    game_enter(_dummy_vmstate)
    while keep_going:
        uresult = game_update(time.time())
        if uresult is not None:
            if 0 < uresult[0] < 3:
                keep_going = False
    game_exit(_dummy_vmstate)
